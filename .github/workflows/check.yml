name: Flake check
on:
  push:

jobs:
  # Basic flake check
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - run: nix flake check

  # Check NixOS configurations
  nixos:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - id: get-configs
        name: Get NixOS configurations
        run: |
          configs=$(nix eval --json .#nixosConfigurations --apply builtins.attrNames)
          echo "configs=$configs" >> $GITHUB_OUTPUT
    outputs:
      configs: ${{ steps.get-configs.outputs.configs }}

  build-nixos:
    needs: nixos
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.nixos.outputs.configs) }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - name: Build ${{ matrix.config }}
        run: |
          echo "Building NixOS configuration: ${{ matrix.config }}"
          nix build .#nixosConfigurations.${{ matrix.config }}.config.system.build.toplevel --dry-run

  # Check Darwin configurations
  darwin:
    runs-on: macos-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - id: get-configs
        name: Get Darwin configurations
        run: |
          configs=$(nix eval --json .#darwinConfigurations --apply builtins.attrNames)
          echo "configs=$configs" >> $GITHUB_OUTPUT
    outputs:
      configs: ${{ steps.get-configs.outputs.configs }}

  build-darwin:
    needs: darwin
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.darwin.outputs.configs) }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - name: Build ${{ matrix.config }}
        run: |
          echo "Building Darwin configuration: ${{ matrix.config }}"
          nix build .#darwinConfigurations.\"${{ matrix.config }}\".system --dry-run
